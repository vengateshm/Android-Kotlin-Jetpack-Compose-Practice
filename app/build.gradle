plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "com.google.protobuf" version '0.9.0'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    alias libs.plugins.google.services
    id "com.apollographql.apollo3" version "3.8.2"
}

android {
    compileSdk 34

    defaultConfig {
        namespace "dev.vengateshm.android_kotlin_compose_practice"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose

    // Compose dependencies
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"

    // Material icons
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"

    implementation "androidx.compose.animation:animation:$compose_version"

    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    implementation "androidx.compose.foundation:foundation:$compose_version"

    // LiveData
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Constraint layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.1'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'

    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation libs.material
    implementation libs.maps.compose

    // Accompanist
    // Permissions
    implementation libs.accompanist.permissions
    // Pager
    implementation libs.accompanist.pager
    // FlowLayout
    implementation libs.accompanist.flowlayout
    // Lottie
    implementation libs.lottie.compose
    implementation libs.landscapist.glide

    // Paging
    implementation libs.androidx.paging.runtime.ktx
    implementation libs.androidx.paging.compose
    // Google Fonts
    implementation libs.androidx.ui.text.google.fonts

    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.converter.moshi

    implementation libs.okhttp
    implementation libs.logging.interceptor

    // Kotlinx coroutines
    implementation libs.kotlinx.coroutines.core
    // Kotlinx coroutines android
    implementation libs.kotlinx.coroutines.android

    implementation libs.androidx.datastore.core
    implementation libs.androidx.datastore.preferences
    implementation libs.protobuf.javalite

    // Google Maps
    implementation libs.play.services.maps
    implementation libs.play.services.location

    // Dagger - Hilt
    implementation libs.hilt.android
    kapt libs.hilt.android.compiler

    kapt libs.androidx.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

    implementation libs.androidx.navigation.compose

    // Room
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler
    // Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx

    implementation libs.kotlinx.serialization.json

    implementation libs.datetime
    coreLibraryDesugaring 'com.android.tools.desugar_jdk_libs:1.1.6'

    implementation libs.bundles.ktor.client

    //Apollo GraphQL
    implementation libs.apollo.runtime

    //Firebase
    implementation platform(libs.firebase.bom)
    implementation libs.bundles.firebase

    implementation project(':compose_material3')
    implementation project(':common_lib')
    implementation project(':glance_app_widget')

    // Compose previews
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    testImplementation libs.junit
    testImplementation libs.androidx.room.testing

    androidTestImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    // To test flows
    androidTestImplementation libs.turbine
    // Compose testing
    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
    // Needed for createAndroidComposeRule, but not createComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

apollo {
    service("service") {
        packageName.set("dev.vengateshm.android_kotlin_compose_practice")
    }
}