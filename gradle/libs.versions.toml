[versions]
accompanistPager = "0.25.1"
accompanistPermissions = "0.21.2-beta"
agp = "8.5.2"
apolloRuntime = "3.8.2"
appUpdate = "2.1.0"
arrowCore = "1.2.4"
arrowStack = "1.2.4"
biometric = "1.1.0"
biometricKtx = "1.2.0-alpha05"
camera2 = "1.4.1"
coil = "2.7.0"
composeBom = "2024.12.01"
activityCompose = "1.9.3"
composeBetaVersion = "1.7.6"
constraintlayout = "2.2.0"
constraintlayoutCompose = "1.1.0"
coreSplashscreen = "1.1.0-rc01"
datastorePreferences = "1.1.1"
composeMaterialDialogs = "0.8.1-rc"
fig = "0.0.2"
firebaseBom = "33.7.0"
generativeai = "0.9.0"
glanceAppwidget = "1.1.1"
gson = "2.11.0"
guava = "33.2.1-jre"
hiltAndroid = "2.49"
hiltAndroidCompiler = "2.48"
hiltCompiler = "1.2.0"
hiltNavigationCompose = "1.2.0"
jaxbRuntime = "2.3.2"
junitJupiterApi = "5.10.3"
klutterCore = "3.0.0"
koinAnnotations = "2.0.0-Beta2"
kotest = "5.9.1"
kotlin = "2.0.21"
fragmentKtx = "1.8.5"
fragment-compose = "1.8.5"
glide = "4.16.0"
kotlinpoet = "1.18.1"
kotlinReflect = "2.0.21"
kotlinxCollectionsImmutable = "0.3.6"
kotlinxCoroutinesAndroid = "1.9.0"
kotlinxCoroutinesCore = "1.9.0"
kotlinxSerializationJson = "1.7.3"
ktorClientCore = "3.0.0"
landscapistGlide = "1.4.5"
libphonenumberAndroid = "8.13.35"
loggingInterceptor = "5.0.0-alpha.3"
lottieCompose = "4.2.0"
mapsCompose = "6.1.2"
material3 = "1.2.1"
material3-beta = "1.3.1"
materialIconsExtendedAndroid = "1.7.6"
media3Ui = "1.5.1"
mockk = "1.13.12"
navigationCompose = "2.8.5"
navigationFragmentKtx = "2.8.5"
okhttp = "5.0.0-alpha.3"
pagingRuntimeKtx = "3.3.5"
playServicesAds = "23.6.0"
playServicesLocation = "21.3.0"
playServicesMaps = "19.0.0"
playServicesMlkitDocumentScanner = "16.0.0-beta1"
preferenceKtxVersion = "1.2.1"
protobufJavalite = "3.25.2"
protobufKotlinLite = "3.25.2"
retrofit = "2.11.0"
roomRuntime = "2.6.1"
roomTesting = "2.6.1"
runtimeLivedata = "1.7.6"
rxjava = "3.1.6"
securityCryptoKtx = "1.1.0-alpha06"
tensorflowLiteGpu = "2.9.0"
tensorflowLiteGpuDelegatePlugin = "0.4.0"
tensorflowLiteTaskVision = "0.4.0"
turbine = "1.1.0"
uiTextGoogleFonts = "1.7.6"
voyager = "1.0.0"
firebaseFirestoreKtx = "25.1.1"
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
dokka = "1.9.20"
daggerHilt = "2.49"
googleServices = "4.4.2"
secretsGradlePlugin = "2.0.1"
ksp = "2.0.21-1.0.28"
composeInvestigator = "1.5.11-0.2.1"
koinBom = "4.1.0-Beta1"
mockkAndroid = "1.13.11"
espressoIdlingResource = "3.6.1"
lifecycleRuntimeKtx = "2.8.7"
window = "1.3.0"
workRuntimeKtx = "2.10.0"
material3-adaptive = "1.0.0"
material3-adaptive-navigation-suite = "1.3.0"
openApi = "7.8.0"
truth = "1.4.4"
kotlinxDateTime = "0.6.1"
ktlint = "1.3.1"
jsoup = "1.18.1"
credentials = "1.5.0-beta01"
appSearch = "1.1.0-alpha07"
googleId = "1.1.1"

[libraries]
#Android
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-fragment-compose = { module = "androidx.fragment:fragment-compose", version.ref = "fragment-compose" }

#Window
androidx-window = { module = "androidx.window:window", version.ref = "window" }

#Navigation
androidx-navigation-runtime = { module = "androidx.navigation:navigation-runtime", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigationFragmentKtx" }

#Camera
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "camera2" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera2" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera2" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera2" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "camera2" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "camera2" }

#Media3
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3Ui" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3Ui" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3Ui" }

#Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroidCompiler" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompiler" }

#Paging
androidx-paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingRuntimeKtx" }

#Material
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

#Datastore
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastorePreferences" }
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastorePreferences" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }

#Splash screen
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }

#Work Manager
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }

#Security Crypto
androidx-security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCryptoKtx" }

#Biometric
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
androidx-biometric-ktx = { module = "androidx.biometric:biometric-ktx", version.ref = "biometricKtx" }

#Credentials
androidx-credentials-core = { group = "androidx.credentials", name = "credentials", version.ref = "credentials" }
# Optional - needed for credentials support from play services, for Android 13 and below.
androidx-credentials-compat = { group = "androidx.credentials", name = "credentials-play-services-auth", version.ref = "credentials" }
googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleId" }

#Appsearch
androidx-appsearch = { module = "androidx.appsearch:appsearch", version.ref = "appSearch" }
androidx-appsearch-compiler = { module = "androidx.appsearch:appsearch-compiler", version.ref = "appSearch" }
androidx-appsearch-local-storage = { module = "androidx.appsearch:appsearch-local-storage", version.ref = "appSearch" }

#Google
generativeai = { module = "com.google.ai.client.generativeai:generativeai", version.ref = "generativeai" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
play-services-mlkit-document-scanner = { module = "com.google.android.gms:play-services-mlkit-document-scanner", version.ref = "playServicesMlkitDocumentScanner" }
play-services-mlkit-smart-reply = { module = "com.google.android.gms:play-services-mlkit-smart-reply", version.ref = "playServicesMlkitDocumentScanner" }
app-update = { module = "com.google.android.play:app-update", version.ref = "appUpdate" }
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdate" }

#Kotlin
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

#Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-compose-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout" }
androidx-compose-animation = { group = "androidx.compose.animation", name = "animation" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-material = { module = "androidx.compose.material:material" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
maps-compose-utils = { module = "com.google.maps.android:maps-compose-utils", version.ref = "mapsCompose" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingRuntimeKtx" }
androidx-ui-text-google-fonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "uiTextGoogleFonts" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-material-icons-extended-android = { module = "androidx.compose.material:material-icons-extended-android", version.ref = "materialIconsExtendedAndroid" }
runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "runtimeLivedata" }
androidx-lifecycle-runtime-compose-android = { module = "androidx.lifecycle:lifecycle-runtime-compose-android", version.ref = "lifecycleRuntimeKtx" }

#Compose Material3
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3-beta" }
androidx-compose-material3-adaptive = { module = "androidx.compose.material3.adaptive:adaptive", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-layout = { module = "androidx.compose.material3.adaptive:adaptive-layout", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-navigation = { module = "androidx.compose.material3.adaptive:adaptive-navigation", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-navigation-suite = { module = "androidx.compose.material3:material3-adaptive-navigation-suite", version.ref = "material3-adaptive-navigation-suite" }

#Glance App Widget
androidx-glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "glanceAppwidget" }
androidx-glance-material3 = { module = "androidx.glance:glance-material3", version.ref = "glanceAppwidget" }
androidx-glance-testing = { module = "androidx.glance:glance-testing", version.ref = "glanceAppwidget" }
androidx-glance-appwidget-testing = { module = "androidx.glance:glance-appwidget-testing", version.ref = "glanceAppwidget" }

#Compose Beta
androidx-compose-beta-ui = { module = "androidx.compose.ui:ui", version.ref = "composeBetaVersion" }
androidx-compose-beta-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeBetaVersion" }
androidx-compose-beta-animation = { module = "androidx.compose.animation:animation", version.ref = "composeBetaVersion" }
androidx-compose-beta-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeBetaVersion" }
androidx-compose-beta-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "composeBetaVersion" }
androidx-compose-beta-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeBetaVersion" }
androidx-compose-beta-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeBetaVersion" }
androidx-compose-beta-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeBetaVersion" }
androidx-compose-beta-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeBetaVersion" }

#Lottie Compose
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }

#Accompanist
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanistPager" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

#Compose Material Dialogs
compose-material-dialogs = { module = "io.github.vanpra.compose-material-dialogs:datetime", version.ref = "composeMaterialDialogs" }

#Preference ktx
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceKtxVersion" }

#Room
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomRuntime" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "roomRuntime" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomRuntime" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "roomTesting" }

#Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
landscapist-glide = { module = "com.github.skydoves:landscapist-glide", version.ref = "landscapistGlide" }

#Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

#Kotlinx serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
#Datetime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }

#Ksp
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

#Ktor client
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientCore" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientCore" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientCore" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClientCore" }

#Apollo GraphQL
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apolloRuntime" }

#Desugaring JDK
desugar-jdk = { module = "com.android.tools.desugar_jdk_libs:1.1.6" }

#Voyager
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }
voyager-tabNavigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-hilt = { module = "cafe.adriel.voyager:voyager-hilt", version.ref = "voyager" }
voyager-kodein = { module = "cafe.adriel.voyager:voyager-kodein", version.ref = "voyager" }
voyager-rxjava = { module = "cafe.adriel.voyager:voyager-rxjava", version.ref = "voyager" }

#Protobuf
protobuf-javalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobufJavalite" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobufKotlinLite" }

#RxJava
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }

#Arrow
arrow-stack = { module = "io.arrow-kt:arrow-stack", version.ref = "arrowStack" }
arrow-kt-arrow-core = { module = "io.arrow-kt:arrow-core" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrowCore" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrowCore" }

#Klutter
klutter-core = { module = "uy.kohesive.klutter:klutter-core", version.ref = "klutterCore" }

#Guava
guava = { module = "com.google.guava:guava", version.ref = "guava" }

#Gson
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

#OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

#Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }

#JUnit5
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiterApi" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiterApi" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiterApi" }

#Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-database-ktx = { module = "com.google.firebase:firebase-database-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-firestore-ktx = { group = "com.google.firebase", name = "firebase-firestore-ktx", version.ref = "firebaseFirestoreKtx" }

kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

#Junit
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }

#Espresso
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-espresso-idling-resource = { group = "androidx.test.espresso", name = "espresso-idling-resource", version.ref = "espressoIdlingResource" }

#Truth assertions
truth = { module = "com.google.truth:truth", version.ref = "truth" }

#Turbine
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

#Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-test = { module = "io.insert-koin:koin-test" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4" }
koin-android-test = { module = "io.insert-koin:koin-android-test" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations" }

#Mockk
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }

#Kotest
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }

#JAXB
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "jaxbRuntime" }

#Fig - Google sheets as remote config
fig = { module = "com.github.theapache64:fig", version.ref = "fig" }

#libphonenumber android
libphonenumber-android = { module = "io.michaelrocks:libphonenumber-android", version.ref = "libphonenumberAndroid" }

#Tensorflow Lite
tensorflow-lite-gpu = { module = "org.tensorflow:tensorflow-lite-gpu", version.ref = "tensorflowLiteGpu" }
tensorflow-lite-gpu-delegate-plugin = { module = "org.tensorflow:tensorflow-lite-gpu-delegate-plugin", version.ref = "tensorflowLiteGpuDelegatePlugin" }
tensorflow-lite-task-vision = { module = "org.tensorflow:tensorflow-lite-task-vision", version.ref = "tensorflowLiteTaskVision" }

[bundles]
compose = ["androidx-compose-ui", "androidx-compose-ui-graphics", "androidx-compose-foundation", "androidx-compose-animation", "androidx-compose-runtime", "androidx-compose-foundation-layout", "androidx-compose-ui-tooling", "androidx-compose-ui-tooling-preview"]
compose-beta = ["androidx-compose-beta-ui", "androidx-compose-beta-foundation", "androidx-compose-beta-animation", "androidx-compose-beta-runtime", "androidx-compose-beta-foundation-layout", "androidx-compose-beta-ui-tooling", "androidx-compose-beta-ui-tooling-preview"]
ktor-client = ["ktor-client-android", "ktor-client-content-negotiation", "ktor-client-core", "ktor-client-logging", "ktor-serialization-kotlinx-json"]
kotest = ["kotest-runner", "kotest-assertions", "kotest-property"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
jetbrains-kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
mapsplatform-secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
composeInvestigator = { id = "land.sungbin.composeinvestigator", version.ref = "composeInvestigator" }
compose-plugin = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
openApi-generator = { id = "org.openapi.generator", version.ref = "openApi" }
spotless = "com.diffplug.spotless:6.25.0"